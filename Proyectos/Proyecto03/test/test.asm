PROCESSOR 16F877
INCLUDE <P16F877.INC>

; VARIABLES Y CONSTANTES
T           EQU H'20'        ; VARIABLE TEMPORAL PARA EL CARRY
E           EQU H'21'        ; REGISTRO DONDE SE GUARDA EL RESULTADO DE LAS RESTAS
ZA          EQU H'22'        ; REGISTRO DONDE SE ALMACENA LA MULTIPLICACION
M           EQU H'23'        ; CONTEO PARA LA MULTIPLICACIÓN
PA          EQU H'24'        ; PARTE ALTA DEL ADRESH
PB          EQU H'25'        ; PARTE BAJA DEL ADRESH
TEM         EQU H'26'        ; TEMPORAL DEL ADRESH
VAL0        EQU H'30'        ; REGISTRO PARA LOS RETARDOS
VAL1        EQU H'31'        ; REGISTRO PARA LOS RETARDOS
VAL2        EQU H'32'        ; REGISTRO PARA LOS RETARDOS
UNIDADES    EQU H'33'        ; CONVERSIÓN DEL TERMOMÉTRO UNIDADES
DECENAS     EQU H'34'        ; CONVERSIÓN DEL TERMOMÉTRO DECENAS
CENTENAS    EQU H'35'        ; CONVERSIÓN DEL TERMOMÉTRO CENTENAS   
RESTO       EQU 0X35         ; AQUÍ SE GUARDA EL RESTO DEL TERMOMETRO
U           EQU H'40'        ; CONTEO DE LA PARTE ENTERA U.DC
L           EQU H'41'        ; CONTEO DE LA PARTE DECIMAL
L1          EQU H'42'        ; CONTEO DE LA PARTE CENTECIMAL
HA          EQU H'43'        ; PARTE ALTA DEL ASCII
HB          EQU H'44'        ; PARTE BAJA DEL ASCII
BINARIO		EQU H'45'
BIT_COUNT	EQU	H'46'

H           EQU H'00'        ; CONSTANTE DEL VALOR DEL ADRESH
X           EQU H'09'        ; CONSTANTE PARA EL XOR

; CODIGO
ORG 0
GOTO INICIO
ORG 5
INICIO
    CALL CONFIGURAR_PUERTOS
START
    CALL DIPSWICH           ; LLAMAMOS A LA RUTINA DEL DIPSWITCH
    GOTO START

CONFIGURAR_PUERTOS
    CLRF PORTA              ; LIMPIA EL PORTA
    CLRF PORTB              ; LIMPIA EL PORTB
    CLRF PORTD              ; LIMPIA EL PORTD
    BSF STATUS,RP0          ; CAMBIA AL BANCO 1   
    BCF STATUS,RP1
    MOVLW 0XFF
    MOVWF TRISB             ; CONFIGURA EL PUERTO B COMO ENTRADA
    CLRF TRISD              ; CONFIGURA EL PRIMER BIT COMO ENTRADA Y LOS DEMÁS COMO SALIDA
    CLRF ADCON1             ; CONFIGURA EL PUERTO A Y E COMO ANALÓGICAS
    MOVLW H'3F'
    MOVWF TRISA             ; CONFIGURA EL PUERTO A COMO ENTRADA
    CLRF TRISC
    BCF STATUS,RP0          ; REGRESA AL BANCO 0
    RETURN

DIPSWICH
    MOVF	PORTB,W
			ANDLW	0X07
			ADDWF	PCL,F
			GOTO	CERO
			GOTO	UNO
			GOTO	DOS
			GOTO	TRES
			GOTO	CUATRO
			GOTO	CINCO
			GOTO 	CERO
			GOTO 	CERO

REGRESO
    RETURN

CERO                          ; VOLTIMETRO
    MOVLW H'C9'             ; CONFIGURACIÓN DEL CONVERTIDOR CON ENTRADA A0
    CALL CONVERTIDOR
    CALL CHD
    CALL CHA 
    CALL LCD_INICIALIZA
    CALL MENSAJE_1
    CALL LCD_LINEA2
    CALL MENSAJE_2
    GOTO DIPSWICH
UNO                           ; TERMOMETRO
    MOVLW B'11000001'       ; CONFIGURACIÓN DEL CONVERTIDOR CON ENTRADA A3
    CALL CONVERTIDOR
    CALL TEMP
    CALL CHA
    CALL LCD_INICIALIZA
    CALL MENSAJE_3
    CALL LCD_LINEA2
    CALL MENSAJE_4
    GOTO DIPSWICH

DOS
	CALL CONVERTIDOR
	CALL LCD_INICIALIZA
	CALL MENSAJE_BIN
	CALL LCD_LINEA2
; Subrutina para enviar un valor binario al LCD
; El valor binario está en el registro W al llamar a la subrutina
SEND_BIN_TO_LCD
	MOVFW ADRESH
    MOVWF BINARIO         ; Guarda el valor binario en TEMP
    MOVLW H'08'         ; Inicializa el contador de bits (8 bits)
    MOVWF BIT_COUNT    
SEND_BIT_LOOP
	BCF	STATUS,C
    RLF BINARIO, F         ; Desplaza el bit más significativo a través del carry
    BTFSC STATUS, C     ; Si el bit es 1
    MOVLW '1'           ; Cargar ASCII '1' en W
    BTFSS STATUS, C     ; Si el bit es 0
    MOVLW '0'           ; Cargar ASCII '0' en W
    CALL LCD_CHAR       ; Enviar el carácter al LCD
    DECFSZ BIT_COUNT, F ; Decrementar el contador de bits
    GOTO SEND_BIT_LOOP  ; Repetir para el siguiente bit
    GOTO DIPSWICH

; Subrutina para enviar un carácter al LCD
LCD_CHAR
    MOVWF PORTD         ; Mueve el carácter al puerto D
    CALL LCD_ENVIA      ; Envía el carácter
    RETURN


TRES
	GOTO REGRESO
CUATRO
	GOTO REGRESO
CINCO
	GOTO REGRESO
; CONVERTIDOR ANALÓGICO
CONVERTIDOR
    MOVWF ADCON0            ; CONFIGURA AL CONVERTIDOR
    BSF ADCON0,H'02'        ; INICIA LA CONVERSIÓN
    CALL RETARDO            ; ESPERA 20 MICROS
ESPERA    
    BTFSC ADCON0,H'02'      ; COMPRUEBA QUE YA HAYA TERMINADO
    GOTO ESPERA 
    MOVFW ADRESH            ;MUEVE EL RESULTADO DE LA CONVERSIÓN A W
    RETURN

; CONVERSIÓN DE HEXA A DECIMAL PARA EL VOLTIMETRO
CHD
    MOVWF E                 ; PASAMOS EL VALOR DE ADRESH A E
    MOVLW H'00'             ; PASAMOS UN CERO PARA INICIALIZAR LOS CONTADORES
    MOVWF U 
    MOVWF T
    MOVWF M
    MOVWF L
    MOVWF L1
    MOVWF ZA
LOOP1
    MOVLW H'33'             ; NÚMERO A RESTAR 51 DECIMAL
    SUBWF E,0               ; W = ADRESH - 33H
    BTFSS STATUS, H'00'     ; COMPRUEBA SI EL RESULTADO ES POSITIVO
    GOTO CONF               ; SALTA SI FUE NEGATIVO Y PASA A LOS DECIMALES
    MOVWF E                 ; GUARDA EL RESULTADO DE LA RESTA
    INCF U,1                ; INCREMENTA LA PARTE ENTERA
    GOTO LOOP1              ; REGRESA A RESTAR
CONF
    MOVF E,W                ; W = E
    MOVWF ZA                ; ZA = E
    CALL MULTIPLICACION
LOOP2
    MOVLW H'33'             ; NÚMERO A RESTAR 51 DECIMAL
    SUBWF E,0               ; W = E - W
    BTFSS STATUS, H'00'     ; COMPRUEBA SI EL RESULTADO ES POSITIVO
    GOTO LOOP3
REGRESO1
    MOVWF E                 ; GUARDA EL RESULTADO DE LA RESTA
    INCF L,1                ; INCREMENTA LA PARTE DECIMAL
    GOTO LOOP2              ; REGRESA A RESTAR
LOOP3
    MOVWF ZA                ; GUARDA EL RESULTADO DE LA RESTA
    MOVLW H'01'             ; W = 1
    SUBWF T,0               ; W = T - 1
    BTFSS STATUS,H'00'      ; COMPRUEBA EL RESULTADO DE LA RESTA
    GOTO LOOP4 
    MOVWF T
    MOVF ZA, 0
    GOTO REGRESO1
LOOP4
    MOVLW H'00'             ; LIMPIAMOS EL REGISTRO M
    MOVWF M
    MOVF E,W                ; W = E
    MOVWF ZA                ; ZA = E
    CALL MULTIPLICACION
LOOP5
    MOVLW H'33'             ; NÚMERO A RESTAR 51 DECIMAL
    SUBWF E,0               ; W = E - W
    BTFSS STATUS, H'00'     ; COMPRUEBA SI EL RESULTADO ES POSITIVO
    GOTO LOOP6
RET
    MOVWF E                 ; GUARDA EL RESULTADO DE LA RESTA
    INCF L1,1               ; INCREMENTA LA PARTE DECIMAL
    GOTO LOOP5              ; REGRESA A RESTAR
LOOP6
    MOVWF ZA                ; GUARDA EL RESULTADO DE LA RESTA
    MOVLW H'01'             ; W = 1
    SUBWF T,0               ; W = T - 1
    BTFSS STATUS,H'02'      ; COMPRUEBA EL RESULTADO DE LA RESTA
    GOTO LOOP7              ; SI ES 
    MOVWF T
    MOVF ZA, 0
    GOTO RET
LOOP7                       ; REALIZA LA CONVERSIÓN A ASCII
    MOVLW H'30'
    ADDWF U,1
    MOVLW H'30'
    ADDWF L,1
    MOVLW H'30'
    ADDWF L1,1
    RETURN

; CONVERTIDOR HEX A ASCII
CHA
    MOVF ADRESH,W           ; MUEVE EL VALOR DEL ADRESH A W
    MOVWF TEM               ; PASA EL ADRESH A W
    MOVLW H'F0'
    ANDWF TEM,1             ; ELIMINAMOS LA PARTE BAJA
    SWAPF TEM,0
    MOVWF TEM
    CALL COMP
    MOVWF HA

    MOVF ADRESH,W           ; MUEVE EL VALOR DEL ADRESH A W
    MOVWF TEM               ; PASA EL ADRESH A W
    MOVLW H'0F'
    ANDWF TEM,1             ; ELIMINAMOS LA PARTE BAJA
    CALL COMP
    MOVWF HB
    RETURN
COMP
    MOVLW H'09'
    SUBWF TEM,0
    BTFSS STATUS, H'00'
    GOTO NUMERO
    BTFSC STATUS, H'02'
    GOTO NUMERO
    GOTO LETRA
REG
    RETURN
NUMERO
    MOVLW H'30'
    ADDWF TEM,0 
    GOTO REG
LETRA
    MOVLW H'37'
    ADDWF TEM,0
    GOTO REG    

; COMPARADOR PARA EL DIBUJO DEL VOLTÍMETRO

; MULTIPLICACIÓN
MULTIPLICACION
    MOVF ZA,W               ; ES EL VALOR DEL RESIDUO QUE DEBEMOS DE MULTIPLICAR
    ADDWF E,1               ; E = E + ZA
    BTFSC STATUS, H'00'     ; REVISA SI HUBO ALGÚN DESBORDAMIENTO
    CALL NEGATIVO           ; SI HUBO DESBORDAMIENTO SALTA
    INCF M,1                ; INCREMENTA PARA EL CONTADOR DE LA MULTIPLICACIÓN
    MOVLW X                 ; W = 9
    XORWF M,0               ; AND ENTRE  W Y X
    BTFSS STATUS, H'02'     ; COMPRUEBA LA BANDERA DE CERO PARA SABER SI YA SE MULTIPLICÓ POR 10
    GOTO MULTIPLICACION     ; SIGNIFICA QUE AÚN NO MULTIPLICÓ POR 10
    RETURN

NEGATIVO
    MOVLW H'01'             ; W = 1
    ADDWF T,W               ; W = T + 1
    MOVWF T                 ; T = W
    RETURN                  ; REGRESA

; LCD
LCD_INICIALIZA
    BCF PORTD,H'06'         ; PONE RS = 0 -> ERS00 0000
    MOVLW 0X30
	MOVWF PORTD
	CALL LCD_Comando
	MOVLW 0X38              ; 8 BITS - DOS RENGLONES
    MOVWF PORTD
    CALL LCD_Comando
    MOVLW H'01'             ; PASAMOS EL H'01' A W   W = 0CH  LIMPIA LA PANTALLA
    MOVWF PORTD             ; PORTB <- W
    CALL LCD_Comando        ; LLAMANOS A LA RUTINA COMANDO
    MOVLW H'0C'             ; PASAMOS EL H'0C' A W   W = 01H  NOS COLOCA EL PRIMER RENGLÓN PRIMERA COLUMNA
    MOVWF PORTD             ; PORTB <- W
    CALL LCD_Comando        ; LLAMANOS A LA RUTINA COMANDO
    MOVLW H'06'             ; PASAMOS EL H'3C' A W   W = 3CH  DA DE ALTA EL CURSOR
    MOVWF PORTD             ; PORTB <- W
    CALL LCD_Comando        ; LLAMANOS A LA RUTINA COMANDO
    MOVLW H'02'
	MOVWF PORTD
	CALL LCD_Comando
	BSF PORTC,1             ; PONE RS = 1
    RETURN

LCD_Comando
    BSF PORTC,0             ; PONE E = 1 -> ERS00 0000
    CALL DELAY              ; RETARDOS
    CALL DELAY
    BCF PORTC,0             ; PONE E = 0
    CALL DELAY
    RETURN

LCD_ENVIA
    BSF PORTC,1             ; PONE RS = 1
    CALL LCD_Comando
    RETURN

LCD_LINEA2
    BCF PORTC,1             ; PONE RS = 0
    MOVLW H'C0'             ; INICIA EN EL SEGUNDO RENGLON PRIMERA COLUMNA
    MOVWF PORTD
    CALL LCD_Comando
    RETURN

MENSAJE_BIN
    MOVLW 'B'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'I'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'N'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'A'
    MOVWF PORTD
    CALL LCD_ENVIA    
    MOVLW 'R'
    MOVWF PORTD
    CALL LCD_ENVIA    
    MOVLW 'I'
    MOVWF PORTD
    CALL LCD_ENVIA    
    MOVLW 'O'
    MOVWF PORTD
    CALL LCD_ENVIA    
	
    MOVLW H'00'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW H'04'
    MOVWF PORTD
    CALL LCD_ENVIA

    RETURN

MENSAJE_1
    MOVLW 'V'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'O'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'L'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ':'
    MOVWF PORTD
    CALL LCD_ENVIA    

    MOVF U,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW '.'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF L,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF L1,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'V'
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW H'00'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW H'04'
    MOVWF PORTD
    CALL LCD_ENVIA

    RETURN
    
MENSAJE_2
    MOVLW 'H'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'E'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'X'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ':'
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVF HA,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF HB,W
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW H'02'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW H'06'
    MOVWF PORTD
    CALL LCD_ENVIA
    RETURN
    
MENSAJE_3
    MOVLW 'T'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'E'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'M'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'P'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ':'
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVF CENTENAS,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF DECENAS,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF UNIDADES,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW H'00'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW H'04'
    MOVWF PORTD
    CALL LCD_ENVIA
    RETURN
MENSAJE_4
    MOVLW 'H'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'E'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW 'X'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ':'
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVF HA,W
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVF HB,W
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW ' '
    MOVWF PORTD
    CALL LCD_ENVIA

    MOVLW H'02'
    MOVWF PORTD
    CALL LCD_ENVIA
    MOVLW H'06'
    MOVWF PORTD
    CALL LCD_ENVIA
    RETURN


; CONVERTIDOR DE TEMPERATURA
TEMP
    CLRF CENTENAS
    CLRF DECENAS
    CLRF UNIDADES
    
    MOVF ADRESH,W   
    ADDWF ADRESH,W          ; DUPLICA EL VALOR DE ADRESH PARA 
                            ; OBTENER UN VALOR DE TEMPERATURA REAL APROX
    MOVWF RESTO             ; GUARDA EL VALOR DE ADRESH EN RESTO  
    
    ; COMIENZA EL PROCESO DE OBTENCIÓN DE VALORES BCD 
    ; PARA CENTENAS, DECENAS Y UNIDADES A TRAVÉS DE RESTAS
    ; SUCESIVAS.
CENTENAS1
    MOVLW D'100'            ; W=D'100'
    SUBWF RESTO,W           ; RESTO - D'100' (W)
    BTFSS STATUS,C          ; RESTO MENOR QUE D'100'?
    GOTO DECENAS1           ; SI
    MOVWF RESTO             ; NO, SALVA EL RESTO
    INCF CENTENAS,1         ; INCREMENTA EL CONTADOR DE CENTENAS BCD
    GOTO CENTENAS1          ; REALIZA OTRA RESTA
DECENAS1
    MOVLW D'10'             ; W=D'10'
    SUBWF RESTO,W           ; RESTO - D'10' (W)
    BTFSS STATUS,C          ; RESTO MENOR QUE D'10'?
    GOTO UNIDADES1          ; SI
    MOVWF RESTO             ; NO, SALVA EL RESTO
    INCF DECENAS,1          ; INCREMENTA EL CONTADOR DE CENTENAS BCD
    GOTO DECENAS1           ; REALIZA OTRA RESTA
UNIDADES1
    MOVF RESTO,W            ; EL RESTO SON LA UNIDADES BCD
    MOVWF UNIDADES
    CLRF RESTO
OBTEN_ASCII
    MOVLW H'30' 
    ADDWF UNIDADES,F      
    ADDWF DECENAS,F
    ADDWF CENTENAS,F      
    RETURN

DELAY                      ; RETARDO PARA EL LCD
    MOVLW .100
    MOVWF VAL2

CICLO
    MOVLW .255
    MOVWF VAL1

CICLO2
    DECFSZ VAL1,H'01'
    GOTO CICLO2
    DECFSZ VAL2,H'01'
    GOTO CICLO
    RETURN

RETARDO                   ; RETARDO PARA EL CONVERTIDOR
    MOVLW .33
    MOVWF VAL0

CICLO3
    DECFSZ VAL0,H'01'
    GOTO CICLO3
    RETURN

RETA
    MOVLW .255
    MOVWF VAL2

CICLO4
    MOVLW .255
    MOVWF VAL1

CICLO5
    DECFSZ VAL1,H'01'
    GOTO CICLO5
    DECFSZ VAL2,H'01'
    GOTO CICLO4
    RETURN

END
